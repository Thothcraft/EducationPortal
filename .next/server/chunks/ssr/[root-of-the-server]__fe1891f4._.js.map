{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/gad/Desktop/Thothcraft/EducationPortal/app/components/CourseCard.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { motion } from 'framer-motion';\nimport { Clock, Users, Star, ChevronRight, BookOpen, Award } from 'lucide-react';\n\ninterface CourseCardProps {\n  course: {\n    course_id: string;\n    title: string;\n    description: string;\n    instructor: string;\n    difficulty: string;\n    duration_hours: number;\n    enrolled_students: number;\n    rating: number;\n    modules: string[];\n    progress?: number;\n  };\n  onEnroll?: (courseId: string) => void;\n  onContinue?: (courseId: string) => void;\n}\n\nexport default function CourseCard({ course, onEnroll, onContinue }: CourseCardProps) {\n  const getDifficultyColor = (difficulty: string) => {\n    switch (difficulty) {\n      case 'beginner': return 'bg-green-500/20 text-green-400';\n      case 'intermediate': return 'bg-yellow-500/20 text-yellow-400';\n      case 'advanced': return 'bg-orange-500/20 text-orange-400';\n      case 'expert': return 'bg-red-500/20 text-red-400';\n      default: return 'bg-gray-500/20 text-gray-400';\n    }\n  };\n\n  const isEnrolled = course.progress !== undefined;\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      whileHover={{ scale: 1.02 }}\n      className=\"bg-white/10 backdrop-blur-md rounded-xl overflow-hidden border border-white/20 shadow-xl\"\n    >\n      {/* Course Header with 3D Model */}\n      <div className=\"relative h-48 bg-gradient-to-br from-blue-600 to-purple-600\">\n        <iframe\n          src=\"https://poly.cam/capture/ABE69FEA-A1DF-4CC5-BC65-CF1DB40BFEE8/embed\"\n          className=\"w-full h-full opacity-50\"\n          frameBorder=\"0\"\n          allowFullScreen\n        />\n        <div className=\"absolute inset-0 bg-gradient-to-t from-black/50 to-transparent\" />\n        <div className=\"absolute bottom-4 left-4\">\n          <span className={`px-3 py-1 rounded-full text-xs font-medium ${getDifficultyColor(course.difficulty)}`}>\n            {course.difficulty.toUpperCase()}\n          </span>\n        </div>\n      </div>\n\n      {/* Course Content */}\n      <div className=\"p-6\">\n        <h3 className=\"text-xl font-semibold text-white mb-2\">{course.title}</h3>\n        <p className=\"text-gray-300 text-sm mb-4 line-clamp-2\">{course.description}</p>\n\n        {/* Instructor */}\n        <p className=\"text-sm text-gray-400 mb-4\">\n          Instructor: <span className=\"text-white\">{course.instructor}</span>\n        </p>\n\n        {/* Stats */}\n        <div className=\"grid grid-cols-3 gap-4 mb-4\">\n          <div className=\"flex items-center gap-2\">\n            <Clock className=\"w-4 h-4 text-blue-400\" />\n            <span className=\"text-xs text-gray-300\">{course.duration_hours}h</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <Users className=\"w-4 h-4 text-green-400\" />\n            <span className=\"text-xs text-gray-300\">{course.enrolled_students}</span>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <Star className=\"w-4 h-4 text-yellow-400\" />\n            <span className=\"text-xs text-gray-300\">{course.rating.toFixed(1)}</span>\n          </div>\n        </div>\n\n        {/* Modules Count */}\n        <div className=\"flex items-center gap-2 mb-4\">\n          <BookOpen className=\"w-4 h-4 text-purple-400\" />\n          <span className=\"text-sm text-gray-300\">{course.modules.length} modules</span>\n        </div>\n\n        {/* Progress Bar (if enrolled) */}\n        {isEnrolled && (\n          <div className=\"mb-4\">\n            <div className=\"flex justify-between text-xs text-gray-400 mb-1\">\n              <span>Progress</span>\n              <span>{course.progress}%</span>\n            </div>\n            <div className=\"w-full bg-gray-700 rounded-full h-2\">\n              <motion.div\n                initial={{ width: 0 }}\n                animate={{ width: `${course.progress}%` }}\n                transition={{ duration: 0.5 }}\n                className=\"bg-gradient-to-r from-blue-500 to-purple-500 h-2 rounded-full\"\n              />\n            </div>\n          </div>\n        )}\n\n        {/* Action Button */}\n        {isEnrolled ? (\n          <button\n            onClick={() => onContinue?.(course.course_id)}\n            className=\"w-full bg-gradient-to-r from-blue-500 to-purple-500 hover:from-blue-600 hover:to-purple-600 text-white py-2 px-4 rounded-lg font-medium transition-all flex items-center justify-center gap-2\"\n          >\n            Continue Learning\n            <ChevronRight className=\"w-4 h-4\" />\n          </button>\n        ) : (\n          <button\n            onClick={() => onEnroll?.(course.course_id)}\n            className=\"w-full bg-white/10 hover:bg-white/20 text-white py-2 px-4 rounded-lg font-medium transition-colors border border-white/20 flex items-center justify-center gap-2\"\n          >\n            <Award className=\"w-4 h-4\" />\n            Enroll Now\n          </button>\n        )}\n      </div>\n    </motion.div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 457, "column": 0}, "map": {"version":3,"sources":["file:///home/gad/Desktop/Thothcraft/EducationPortal/app/services/api.ts"],"sourcesContent":["/**\n * API Service for Education Portal\n * Handles all communication with Brain backend for educational features\n */\n\nimport axios from 'axios';\n\n// API Configuration\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'https://web-production-d7d37.up.railway.app';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add auth token to requests\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('auth_token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Add response interceptor for error handling\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.code === 'ERR_NETWORK') {\n      console.warn('Network error - using mock data for education portal');\n      // Return mock curriculum data for network errors\n      return Promise.resolve({\n        data: {\n          success: true,\n          message: 'Using mock data (network unavailable)',\n          modules: [\n            {\n              module_id: 'mod_001',\n              title: 'Introduction to Thoth Device',\n              description: 'Learn about the Raspberry Pi, Sense HAT, and PiSugar components',\n              type: 'lesson',\n              difficulty: 'beginner',\n              duration_minutes: 45,\n              order: 1,\n              prerequisites: [],\n              learning_objectives: ['Understand Thoth hardware', 'Identify key components', 'Setup development environment'],\n              content: {\n                video_url: 'https://example.com/videos/intro-thoth.mp4',\n                slides_url: 'https://example.com/slides/intro-thoth.pdf',\n                materials: [\n                  { type: 'pdf', title: 'Thoth Hardware Guide', url: 'https://example.com/guides/hardware.pdf' },\n                  { type: 'notebook', title: 'Setup Jupyter Notebook', url: 'https://example.com/notebooks/setup.ipynb' }\n                ]\n              }\n            },\n            {\n              module_id: 'mod_002',\n              title: 'WiFi Configuration & Network Setup',\n              description: 'Configure WiFi using captive portal and network management',\n              type: 'lab',\n              difficulty: 'beginner',\n              duration_minutes: 90,\n              order: 2,\n              prerequisites: ['mod_001'],\n              learning_objectives: ['Setup WiFi captive portal', 'Configure network settings', 'Test connectivity'],\n              content: {\n                video_url: 'https://example.com/videos/wifi-setup.mp4',\n                lab_instructions: 'https://example.com/labs/wifi-config.md',\n                materials: [\n                  { type: 'code', title: 'WiFi Configuration Script', url: 'https://example.com/code/wifi_setup.py' },\n                  { type: 'pdf', title: 'Network Troubleshooting Guide', url: 'https://example.com/guides/network.pdf' }\n                ]\n              }\n            },\n            {\n              module_id: 'mod_003',\n              title: 'Collecting Sensor Data',\n              description: 'Use Sense HAT to collect temperature, humidity, pressure, and motion data',\n              type: 'lab',\n              difficulty: 'intermediate',\n              duration_minutes: 120,\n              order: 3,\n              prerequisites: ['mod_002'],\n              learning_objectives: ['Read sensor data', 'Store data locally', 'Visualize sensor readings'],\n              content: {\n                video_url: 'https://example.com/videos/sensor-data.mp4',\n                notebook_url: 'https://example.com/notebooks/sensor_collection.ipynb',\n                materials: [\n                  { type: 'code', title: 'Sensor Reading Library', url: 'https://example.com/code/sensors.py' },\n                  { type: 'dataset', title: 'Sample Sensor Data', url: 'https://example.com/data/sample_sensors.csv' },\n                  { type: 'pdf', title: 'Sense HAT API Reference', url: 'https://example.com/docs/sensehat-api.pdf' }\n                ]\n              }\n            },\n            {\n              module_id: 'mod_004',\n              title: 'Introduction to AI/ML on Edge Devices',\n              description: 'Learn machine learning concepts and edge computing with TensorFlow Lite',\n              type: 'lesson',\n              difficulty: 'intermediate',\n              duration_minutes: 150,\n              order: 4,\n              prerequisites: ['mod_003'],\n              learning_objectives: ['Understand edge ML', 'Train simple models', 'Deploy to Raspberry Pi'],\n              content: {\n                video_url: 'https://example.com/videos/edge-ml.mp4',\n                slides_url: 'https://example.com/slides/edge-ml.pdf',\n                notebook_url: 'https://example.com/notebooks/edge_ml_intro.ipynb',\n                materials: [\n                  { type: 'code', title: 'TensorFlow Lite Examples', url: 'https://example.com/code/tflite_examples.py' },\n                  { type: 'model', title: 'Pre-trained Sensor Model', url: 'https://example.com/models/sensor_classifier.tflite' },\n                  { type: 'pdf', title: 'Edge Computing Guide', url: 'https://example.com/guides/edge-computing.pdf' }\n                ]\n              }\n            },\n            {\n              module_id: 'mod_005',\n              title: 'Federated Learning with Multiple Devices',\n              description: 'Implement federated learning using Flower framework across Thoth devices',\n              type: 'project',\n              difficulty: 'advanced',\n              duration_minutes: 180,\n              order: 5,\n              prerequisites: ['mod_004'],\n              learning_objectives: ['Setup Flower client', 'Participate in federated training', 'Understand privacy preservation'],\n              content: {\n                video_url: 'https://example.com/videos/federated-learning.mp4',\n                project_guide: 'https://example.com/projects/federated-learning.md',\n                notebook_url: 'https://example.com/notebooks/federated_learning.ipynb',\n                materials: [\n                  { type: 'code', title: 'Flower Client Implementation', url: 'https://example.com/code/flower_client.py' },\n                  { type: 'code', title: 'Federated Training Script', url: 'https://example.com/code/federated_train.py' },\n                  { type: 'pdf', title: 'Differential Privacy Guide', url: 'https://example.com/guides/differential-privacy.pdf' },\n                  { type: 'dataset', title: 'Federated Training Dataset', url: 'https://example.com/data/federated_data.zip' }\n                ]\n              }\n            },\n            {\n              module_id: 'mod_006',\n              title: 'Capstone: Smart Home Monitor',\n              description: 'Build a complete IoT solution for smart home monitoring with AI predictions',\n              type: 'project',\n              difficulty: 'expert',\n              duration_minutes: 300,\n              order: 6,\n              prerequisites: ['mod_005'],\n              learning_objectives: ['Design IoT architecture', 'Implement real-time monitoring', 'Deploy production system'],\n              content: {\n                video_url: 'https://example.com/videos/capstone-project.mp4',\n                project_template: 'https://example.com/templates/smart-home-monitor.zip',\n                requirements: 'https://example.com/projects/capstone-requirements.md',\n                materials: [\n                  { type: 'code', title: 'Smart Home Dashboard', url: 'https://example.com/code/dashboard.py' },\n                  { type: 'code', title: 'Alert System', url: 'https://example.com/code/alerts.py' },\n                  { type: 'model', title: 'Anomaly Detection Model', url: 'https://example.com/models/anomaly_detector.pkl' },\n                  { type: 'pdf', title: 'Deployment Guide', url: 'https://example.com/guides/deployment.pdf' },\n                  { type: 'video', title: 'Demo Walkthrough', url: 'https://example.com/videos/capstone-demo.mp4' }\n                ]\n              }\n            }\n          ],\n          courses: [\n            {\n              course_id: 'course_001',\n              title: 'AI & IoT with Thoth',\n              description: 'Complete course on IoT and AI',\n              instructor: 'Thoth Team',\n              difficulty: 'intermediate',\n              duration_hours: 15,\n              modules: ['mod_001', 'mod_002'],\n              enrolled_students: 0,\n              rating: 4.8\n            }\n          ]\n        }\n      });\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Types\nexport interface CurriculumModule {\n  module_id: string;\n  title: string;\n  description: string;\n  type: 'lesson' | 'lab' | 'project' | 'quiz' | 'assignment';\n  difficulty: 'beginner' | 'intermediate' | 'advanced' | 'expert';\n  duration_minutes: number;\n  prerequisites: string[];\n  learning_objectives: string[];\n  order: number;\n  content?: {\n    video_url?: string;\n    slides_url?: string;\n    notebook_url?: string;\n    lab_instructions?: string;\n    project_guide?: string;\n    project_template?: string;\n    requirements?: string;\n    materials?: Array<{\n      type: 'pdf' | 'code' | 'notebook' | 'dataset' | 'model' | 'video';\n      title: string;\n      url: string;\n    }>;\n  };\n}\n\nexport interface ContentItem {\n  item_id?: string;\n  title: string;\n  type: 'video' | 'pdf' | 'notebook' | 'slides' | 'code' | 'interactive';\n  url?: string;\n  file_path?: string;\n  duration_minutes?: number;\n  interactive_config?: any;\n}\n\nexport interface StudentProgress {\n  student_id: string;\n  module_id: string;\n  status: 'not_started' | 'in_progress' | 'completed' | 'reviewed';\n  started_at?: string;\n  completed_at?: string;\n  time_spent_minutes: number;\n  score?: number;\n  attempts: number;\n  notes?: string;\n  bookmarks: string[];\n}\n\nexport interface Course {\n  course_id: string;\n  title: string;\n  description: string;\n  instructor: string;\n  difficulty: 'beginner' | 'intermediate' | 'advanced' | 'expert';\n  duration_hours: number;\n  modules: string[];\n  enrolled_students: number;\n  rating: number;\n  tags: string[];\n  created_at: string;\n  updated_at: string;\n}\n\nexport interface LabSubmission {\n  submission_id: string;\n  student_id: string;\n  lab_id: string;\n  code?: string;\n  notebook_path?: string;\n  output?: string;\n  device_data?: any;\n  submitted_at: string;\n  grade?: number;\n  feedback?: string;\n}\n\n// API Service\nclass ApiService {\n  // Authentication\n  async login(email: string, password: string) {\n    const response = await api.post('/token', { email, password });\n    if (response.data.access_token) {\n      localStorage.setItem('auth_token', response.data.access_token);\n    }\n    return response.data;\n  }\n\n  async register(email: string, password: string, role: string = 'student') {\n    const response = await api.post('/register', { email, password, role });\n    return response.data;\n  }\n\n  async getProfile() {\n    const response = await api.get('/profile');\n    return response.data;\n  }\n\n  // Curriculum\n  async getCurriculum(params?: {\n    course_id?: string;\n    module_type?: string;\n    difficulty?: string;\n    tags?: string;\n  }) {\n    const response = await api.get('/curriculum', { params });\n    return response.data;\n  }\n\n  async getModuleDetails(moduleId: string): Promise<CurriculumModule> {\n    const response = await api.get(`/curriculum/${moduleId}`);\n    return response.data;\n  }\n\n  async updateProgress(progress: Partial<StudentProgress>) {\n    const response = await api.post('/curriculum/progress', progress);\n    return response.data;\n  }\n\n  async getStudentProgress(studentId: string, courseId?: string) {\n    const url = courseId \n      ? `/curriculum/progress/${studentId}?course_id=${courseId}`\n      : `/curriculum/progress/${studentId}`;\n    const response = await api.get(url);\n    return response.data;\n  }\n\n  async submitLab(submission: Partial<LabSubmission>) {\n    const response = await api.post('/curriculum/lab/submit', submission);\n    return response.data;\n  }\n\n  async getLeaderboard(courseId?: string, limit: number = 10) {\n    const params: any = { limit };\n    if (courseId) params.course_id = courseId;\n    const response = await api.get('/curriculum/leaderboard', { params });\n    return response.data;\n  }\n\n  // Device Configuration for Labs\n  async configureDevice(deviceId: string, config: any) {\n    const response = await api.post(`/device/${deviceId}/config`, config);\n    return response.data;\n  }\n\n  async getDeviceStatus(deviceId: string) {\n    const response = await api.get(`/device/${deviceId}/status`);\n    return response.data;\n  }\n\n  // Sensor Data for Labs\n  async getSensorData(deviceId: string) {\n    const response = await api.get(`/sensors/current?device_id=${deviceId}`);\n    return response.data;\n  }\n\n  async controlSensors(deviceId: string, config: any) {\n    const response = await api.post('/sensors/control', {\n      device_id: deviceId,\n      ...config\n    });\n    return response.data;\n  }\n\n  // Training for Advanced Labs\n  async setupTraining(config: any) {\n    const response = await api.post('/training/setup', config);\n    return response.data;\n  }\n\n  async getTrainingStatus(jobId: string) {\n    const response = await api.get(`/training/status?job_id=${jobId}`);\n    return response.data;\n  }\n\n  // Files and Resources\n  async downloadResource(filePath: string) {\n    const response = await api.get(`/file/download`, {\n      params: { path: filePath },\n      responseType: 'blob'\n    });\n    return response.data;\n  }\n\n  async uploadLabWork(formData: FormData) {\n    const response = await api.post('/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    return response.data;\n  }\n\n  // Community Features\n  async getForumPosts(moduleId?: string) {\n    // This would connect to Firebase or another backend\n    // Mock implementation for now\n    return {\n      posts: [\n        {\n          id: '1',\n          author: 'Student A',\n          title: 'Help with sensor calibration',\n          content: 'Having issues with temperature sensor readings...',\n          created_at: new Date().toISOString(),\n          replies: 3\n        }\n      ]\n    };\n  }\n\n  async createForumPost(post: {\n    title: string;\n    content: string;\n    module_id?: string;\n  }) {\n    // Mock implementation\n    return {\n      success: true,\n      post_id: 'new-post-id'\n    };\n  }\n\n  // Project Showcase\n  async getProjects(filter?: 'featured' | 'recent' | 'popular') {\n    // Mock implementation\n    return {\n      projects: [\n        {\n          id: '1',\n          title: 'Smart Plant Monitor',\n          author: 'Student B',\n          description: 'IoT system for monitoring plant health',\n          image_url: '/project1.jpg',\n          likes: 42,\n          views: 156\n        }\n      ]\n    };\n  }\n\n  async submitProject(project: {\n    title: string;\n    description: string;\n    module_id: string;\n    video_url?: string;\n    github_url?: string;\n  }) {\n    // Mock implementation\n    return {\n      success: true,\n      project_id: 'new-project-id'\n    };\n  }\n}\n\n// Export singleton instance\nexport const apiService = new ApiService();\nexport default apiService;\n"],"names":[],"mappings":"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","debugId":null}}]
}