{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/gad/Desktop/Thothcraft/EducationPortal/app/components/Navigation.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { User, LogOut, Menu, X, Home, BookOpen, Trophy, Settings, GraduationCap } from 'lucide-react';\n\nexport default function Navigation() {\n  const [isOpen, setIsOpen] = useState(false);\n  const [userInfo, setUserInfo] = useState<any>(null);\n  const router = useRouter();\n\n  useEffect(() => {\n    // Get user info from localStorage\n    const username = localStorage.getItem('username');\n    const role = localStorage.getItem('user_role');\n    if (username && role) {\n      setUserInfo({ username, role });\n    }\n  }, []);\n\n  const handleLogout = () => {\n    localStorage.removeItem('auth_token');\n    localStorage.removeItem('username');\n    localStorage.removeItem('user_role');\n    localStorage.removeItem('student_id');\n    router.push('/auth');\n  };\n\n  const navItems = [\n    { name: 'Courses', href: '/courses', icon: BookOpen },\n    { name: 'Progress', href: '/progress', icon: Trophy },\n    { name: 'Labs', href: '/labs', icon: GraduationCap },\n    { name: 'Settings', href: '/settings', icon: Settings },\n  ];\n\n  return (\n    <nav className=\"bg-black/20 backdrop-blur-md border-b border-white/10 sticky top-0 z-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex justify-between h-16\">\n          {/* Logo and Brand */}\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0 flex items-center\">\n              <GraduationCap className=\"w-8 h-8 text-green-400 mr-3\" />\n              <h1 className=\"text-xl font-bold text-white\">Thoth Education</h1>\n            </div>\n            \n            {/* Desktop Navigation */}\n            <div className=\"hidden md:ml-8 md:flex md:space-x-8\">\n              {navItems.map((item) => {\n                const Icon = item.icon;\n                return (\n                  <a\n                    key={item.name}\n                    href={item.href}\n                    className=\"text-gray-300 hover:text-white px-3 py-2 rounded-md text-sm font-medium transition-colors flex items-center gap-2\"\n                  >\n                    <Icon className=\"w-4 h-4\" />\n                    {item.name}\n                  </a>\n                );\n              })}\n            </div>\n          </div>\n\n          {/* User Menu */}\n          <div className=\"flex items-center\">\n            {userInfo && (\n              <div className=\"hidden md:flex items-center space-x-4\">\n                <div className=\"text-sm\">\n                  <p className=\"text-white font-medium\">{userInfo.username}</p>\n                  <p className=\"text-gray-400 capitalize\">{userInfo.role}</p>\n                </div>\n                <button\n                  onClick={handleLogout}\n                  className=\"bg-red-500/20 hover:bg-red-500/30 text-red-400 px-3 py-2 rounded-lg text-sm font-medium transition-colors flex items-center gap-2\"\n                >\n                  <LogOut className=\"w-4 h-4\" />\n                  Logout\n                </button>\n              </div>\n            )}\n\n            {/* Mobile menu button */}\n            <div className=\"md:hidden\">\n              <button\n                onClick={() => setIsOpen(!isOpen)}\n                className=\"text-gray-400 hover:text-white p-2\"\n              >\n                {isOpen ? <X className=\"w-6 h-6\" /> : <Menu className=\"w-6 h-6\" />}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Mobile Navigation */}\n      {isOpen && (\n        <div className=\"md:hidden bg-black/40 backdrop-blur-md border-t border-white/10\">\n          <div className=\"px-2 pt-2 pb-3 space-y-1\">\n            {navItems.map((item) => {\n              const Icon = item.icon;\n              return (\n                <a\n                  key={item.name}\n                  href={item.href}\n                  className=\"text-gray-300 hover:text-white block px-3 py-2 rounded-md text-base font-medium transition-colors flex items-center gap-2\"\n                  onClick={() => setIsOpen(false)}\n                >\n                  <Icon className=\"w-4 h-4\" />\n                  {item.name}\n                </a>\n              );\n            })}\n            \n            {userInfo && (\n              <div className=\"border-t border-white/10 pt-4 mt-4\">\n                <div className=\"px-3 py-2\">\n                  <p className=\"text-white font-medium\">{userInfo.username}</p>\n                  <p className=\"text-gray-400 capitalize text-sm\">{userInfo.role}</p>\n                </div>\n                <button\n                  onClick={handleLogout}\n                  className=\"w-full text-left text-red-400 hover:text-red-300 px-3 py-2 rounded-md text-base font-medium transition-colors flex items-center gap-2\"\n                >\n                  <LogOut className=\"w-4 h-4\" />\n                  Logout\n                </button>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </nav>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 445, "column": 0}, "map": {"version":3,"sources":["file:///home/gad/Desktop/Thothcraft/EducationPortal/app/services/api.ts"],"sourcesContent":["/**\n * API Service for Education Portal\n * Handles all communication with Brain backend for educational features\n */\n\nimport axios from 'axios';\n\n// API Configuration\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'https://web-production-d7d37.up.railway.app';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add auth token to requests\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('auth_token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Add response interceptor for error handling\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.code === 'ERR_NETWORK') {\n      console.warn('Network error - using mock data for education portal');\n      // Return mock curriculum data for network errors\n      return Promise.resolve({\n        data: {\n          success: true,\n          message: 'Using mock data (network unavailable)',\n          modules: [\n            {\n              module_id: 'mod_001',\n              title: 'Introduction to Thoth Device',\n              description: 'Learn about the Raspberry Pi, Sense HAT, and PiSugar components',\n              type: 'lesson',\n              difficulty: 'beginner',\n              duration_minutes: 45,\n              order: 1,\n              prerequisites: [],\n              learning_objectives: ['Understand Thoth hardware', 'Identify key components', 'Setup development environment'],\n              content: {\n                video_url: 'https://example.com/videos/intro-thoth.mp4',\n                slides_url: 'https://example.com/slides/intro-thoth.pdf',\n                materials: [\n                  { type: 'pdf', title: 'Thoth Hardware Guide', url: 'https://example.com/guides/hardware.pdf' },\n                  { type: 'notebook', title: 'Setup Jupyter Notebook', url: 'https://example.com/notebooks/setup.ipynb' }\n                ]\n              }\n            },\n            {\n              module_id: 'mod_002',\n              title: 'WiFi Configuration & Network Setup',\n              description: 'Configure WiFi using captive portal and network management',\n              type: 'lab',\n              difficulty: 'beginner',\n              duration_minutes: 90,\n              order: 2,\n              prerequisites: ['mod_001'],\n              learning_objectives: ['Setup WiFi captive portal', 'Configure network settings', 'Test connectivity'],\n              content: {\n                video_url: 'https://example.com/videos/wifi-setup.mp4',\n                lab_instructions: 'https://example.com/labs/wifi-config.md',\n                materials: [\n                  { type: 'code', title: 'WiFi Configuration Script', url: 'https://example.com/code/wifi_setup.py' },\n                  { type: 'pdf', title: 'Network Troubleshooting Guide', url: 'https://example.com/guides/network.pdf' }\n                ]\n              }\n            },\n            {\n              module_id: 'mod_003',\n              title: 'Collecting Sensor Data',\n              description: 'Use Sense HAT to collect temperature, humidity, pressure, and motion data',\n              type: 'lab',\n              difficulty: 'intermediate',\n              duration_minutes: 120,\n              order: 3,\n              prerequisites: ['mod_002'],\n              learning_objectives: ['Read sensor data', 'Store data locally', 'Visualize sensor readings'],\n              content: {\n                video_url: 'https://example.com/videos/sensor-data.mp4',\n                notebook_url: 'https://example.com/notebooks/sensor_collection.ipynb',\n                materials: [\n                  { type: 'code', title: 'Sensor Reading Library', url: 'https://example.com/code/sensors.py' },\n                  { type: 'dataset', title: 'Sample Sensor Data', url: 'https://example.com/data/sample_sensors.csv' },\n                  { type: 'pdf', title: 'Sense HAT API Reference', url: 'https://example.com/docs/sensehat-api.pdf' }\n                ]\n              }\n            },\n            {\n              module_id: 'mod_004',\n              title: 'Introduction to AI/ML on Edge Devices',\n              description: 'Learn machine learning concepts and edge computing with TensorFlow Lite',\n              type: 'lesson',\n              difficulty: 'intermediate',\n              duration_minutes: 150,\n              order: 4,\n              prerequisites: ['mod_003'],\n              learning_objectives: ['Understand edge ML', 'Train simple models', 'Deploy to Raspberry Pi'],\n              content: {\n                video_url: 'https://example.com/videos/edge-ml.mp4',\n                slides_url: 'https://example.com/slides/edge-ml.pdf',\n                notebook_url: 'https://example.com/notebooks/edge_ml_intro.ipynb',\n                materials: [\n                  { type: 'code', title: 'TensorFlow Lite Examples', url: 'https://example.com/code/tflite_examples.py' },\n                  { type: 'model', title: 'Pre-trained Sensor Model', url: 'https://example.com/models/sensor_classifier.tflite' },\n                  { type: 'pdf', title: 'Edge Computing Guide', url: 'https://example.com/guides/edge-computing.pdf' }\n                ]\n              }\n            },\n            {\n              module_id: 'mod_005',\n              title: 'Federated Learning with Multiple Devices',\n              description: 'Implement federated learning using Flower framework across Thoth devices',\n              type: 'project',\n              difficulty: 'advanced',\n              duration_minutes: 180,\n              order: 5,\n              prerequisites: ['mod_004'],\n              learning_objectives: ['Setup Flower client', 'Participate in federated training', 'Understand privacy preservation'],\n              content: {\n                video_url: 'https://example.com/videos/federated-learning.mp4',\n                project_guide: 'https://example.com/projects/federated-learning.md',\n                notebook_url: 'https://example.com/notebooks/federated_learning.ipynb',\n                materials: [\n                  { type: 'code', title: 'Flower Client Implementation', url: 'https://example.com/code/flower_client.py' },\n                  { type: 'code', title: 'Federated Training Script', url: 'https://example.com/code/federated_train.py' },\n                  { type: 'pdf', title: 'Differential Privacy Guide', url: 'https://example.com/guides/differential-privacy.pdf' },\n                  { type: 'dataset', title: 'Federated Training Dataset', url: 'https://example.com/data/federated_data.zip' }\n                ]\n              }\n            },\n            {\n              module_id: 'mod_006',\n              title: 'Capstone: Smart Home Monitor',\n              description: 'Build a complete IoT solution for smart home monitoring with AI predictions',\n              type: 'project',\n              difficulty: 'expert',\n              duration_minutes: 300,\n              order: 6,\n              prerequisites: ['mod_005'],\n              learning_objectives: ['Design IoT architecture', 'Implement real-time monitoring', 'Deploy production system'],\n              content: {\n                video_url: 'https://example.com/videos/capstone-project.mp4',\n                project_template: 'https://example.com/templates/smart-home-monitor.zip',\n                requirements: 'https://example.com/projects/capstone-requirements.md',\n                materials: [\n                  { type: 'code', title: 'Smart Home Dashboard', url: 'https://example.com/code/dashboard.py' },\n                  { type: 'code', title: 'Alert System', url: 'https://example.com/code/alerts.py' },\n                  { type: 'model', title: 'Anomaly Detection Model', url: 'https://example.com/models/anomaly_detector.pkl' },\n                  { type: 'pdf', title: 'Deployment Guide', url: 'https://example.com/guides/deployment.pdf' },\n                  { type: 'video', title: 'Demo Walkthrough', url: 'https://example.com/videos/capstone-demo.mp4' }\n                ]\n              }\n            }\n          ],\n          courses: [\n            {\n              course_id: 'course_001',\n              title: 'AI & IoT with Thoth',\n              description: 'Complete course on IoT and AI',\n              instructor: 'Thoth Team',\n              difficulty: 'intermediate',\n              duration_hours: 15,\n              modules: ['mod_001', 'mod_002'],\n              enrolled_students: 0,\n              rating: 4.8\n            }\n          ]\n        }\n      });\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Types\nexport interface CurriculumModule {\n  module_id: string;\n  title: string;\n  description: string;\n  type: 'lesson' | 'lab' | 'project' | 'quiz' | 'assignment';\n  difficulty: 'beginner' | 'intermediate' | 'advanced' | 'expert';\n  duration_minutes: number;\n  prerequisites: string[];\n  learning_objectives: string[];\n  order: number;\n  content?: {\n    video_url?: string;\n    slides_url?: string;\n    notebook_url?: string;\n    lab_instructions?: string;\n    project_guide?: string;\n    project_template?: string;\n    requirements?: string;\n    materials?: Array<{\n      type: 'pdf' | 'code' | 'notebook' | 'dataset' | 'model' | 'video';\n      title: string;\n      url: string;\n    }>;\n  };\n}\n\nexport interface ContentItem {\n  item_id?: string;\n  title: string;\n  type: 'video' | 'pdf' | 'notebook' | 'slides' | 'code' | 'interactive';\n  url?: string;\n  file_path?: string;\n  duration_minutes?: number;\n  interactive_config?: any;\n}\n\nexport interface StudentProgress {\n  student_id: string;\n  module_id: string;\n  status: 'not_started' | 'in_progress' | 'completed' | 'reviewed';\n  started_at?: string;\n  completed_at?: string;\n  time_spent_minutes: number;\n  score?: number;\n  attempts: number;\n  notes?: string;\n  bookmarks: string[];\n}\n\nexport interface Course {\n  course_id: string;\n  title: string;\n  description: string;\n  instructor: string;\n  difficulty: 'beginner' | 'intermediate' | 'advanced' | 'expert';\n  duration_hours: number;\n  modules: string[];\n  enrolled_students: number;\n  rating: number;\n  tags: string[];\n  created_at: string;\n  updated_at: string;\n}\n\nexport interface LabSubmission {\n  submission_id: string;\n  student_id: string;\n  lab_id: string;\n  code?: string;\n  notebook_path?: string;\n  output?: string;\n  device_data?: any;\n  submitted_at: string;\n  grade?: number;\n  feedback?: string;\n}\n\n// API Service\nclass ApiService {\n  // Authentication\n  async login(email: string, password: string) {\n    const response = await api.post('/token', { email, password });\n    if (response.data.access_token) {\n      localStorage.setItem('auth_token', response.data.access_token);\n    }\n    return response.data;\n  }\n\n  async register(email: string, password: string, role: string = 'student') {\n    const response = await api.post('/register', { email, password, role });\n    return response.data;\n  }\n\n  async getProfile() {\n    const response = await api.get('/profile');\n    return response.data;\n  }\n\n  // Curriculum\n  async getCurriculum(params?: {\n    course_id?: string;\n    module_type?: string;\n    difficulty?: string;\n    tags?: string;\n  }) {\n    const response = await api.get('/curriculum', { params });\n    return response.data;\n  }\n\n  async getModuleDetails(moduleId: string): Promise<CurriculumModule> {\n    const response = await api.get(`/curriculum/${moduleId}`);\n    return response.data;\n  }\n\n  async updateProgress(progress: Partial<StudentProgress>) {\n    const response = await api.post('/curriculum/progress', progress);\n    return response.data;\n  }\n\n  async getStudentProgress(studentId: string, courseId?: string) {\n    const url = courseId \n      ? `/curriculum/progress/${studentId}?course_id=${courseId}`\n      : `/curriculum/progress/${studentId}`;\n    const response = await api.get(url);\n    return response.data;\n  }\n\n  async submitLab(submission: Partial<LabSubmission>) {\n    const response = await api.post('/curriculum/lab/submit', submission);\n    return response.data;\n  }\n\n  async getLeaderboard(courseId?: string, limit: number = 10) {\n    const params: any = { limit };\n    if (courseId) params.course_id = courseId;\n    const response = await api.get('/curriculum/leaderboard', { params });\n    return response.data;\n  }\n\n  // Device Configuration for Labs\n  async configureDevice(deviceId: string, config: any) {\n    const response = await api.post(`/device/${deviceId}/config`, config);\n    return response.data;\n  }\n\n  async getDeviceStatus(deviceId: string) {\n    const response = await api.get(`/device/${deviceId}/status`);\n    return response.data;\n  }\n\n  // Sensor Data for Labs\n  async getSensorData(deviceId: string) {\n    const response = await api.get(`/sensors/current?device_id=${deviceId}`);\n    return response.data;\n  }\n\n  async controlSensors(deviceId: string, config: any) {\n    const response = await api.post('/sensors/control', {\n      device_id: deviceId,\n      ...config\n    });\n    return response.data;\n  }\n\n  // Training for Advanced Labs\n  async setupTraining(config: any) {\n    const response = await api.post('/training/setup', config);\n    return response.data;\n  }\n\n  async getTrainingStatus(jobId: string) {\n    const response = await api.get(`/training/status?job_id=${jobId}`);\n    return response.data;\n  }\n\n  // Files and Resources\n  async downloadResource(filePath: string) {\n    const response = await api.get(`/file/download`, {\n      params: { path: filePath },\n      responseType: 'blob'\n    });\n    return response.data;\n  }\n\n  async uploadLabWork(formData: FormData) {\n    const response = await api.post('/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    return response.data;\n  }\n\n  // Community Features\n  async getForumPosts(moduleId?: string) {\n    // This would connect to Firebase or another backend\n    // Mock implementation for now\n    return {\n      posts: [\n        {\n          id: '1',\n          author: 'Student A',\n          title: 'Help with sensor calibration',\n          content: 'Having issues with temperature sensor readings...',\n          created_at: new Date().toISOString(),\n          replies: 3\n        }\n      ]\n    };\n  }\n\n  async createForumPost(post: {\n    title: string;\n    content: string;\n    module_id?: string;\n  }) {\n    // Mock implementation\n    return {\n      success: true,\n      post_id: 'new-post-id'\n    };\n  }\n\n  // Project Showcase\n  async getProjects(filter?: 'featured' | 'recent' | 'popular') {\n    // Mock implementation\n    return {\n      projects: [\n        {\n          id: '1',\n          title: 'Smart Plant Monitor',\n          author: 'Student B',\n          description: 'IoT system for monitoring plant health',\n          image_url: '/project1.jpg',\n          likes: 42,\n          views: 156\n        }\n      ]\n    };\n  }\n\n  async submitProject(project: {\n    title: string;\n    description: string;\n    module_id: string;\n    video_url?: string;\n    github_url?: string;\n  }) {\n    // Mock implementation\n    return {\n      success: true,\n      project_id: 'new-project-id'\n    };\n  }\n\n  // Labs Management\n  async getLabs() {\n    try {\n      const response = await api.get('/curriculum/labs');\n      return response.data.labs || [];\n    } catch (error) {\n      console.warn('Failed to load labs from backend, using mock data');\n      // Return mock labs data\n      return [];\n    }\n  }\n\n  // Course Management\n  async getCourse(courseId: string) {\n    try {\n      const response = await api.get(`/curriculum/courses/${courseId}`);\n      return response.data;\n    } catch (error) {\n      console.warn('Failed to load course from backend, using mock data');\n      // Return mock course data\n      return null;\n    }\n  }\n\n  // Alias for getCurriculum to match expected method name\n  async getCurriculumModules(params?: {\n    course_id?: string;\n    module_type?: string;\n    difficulty?: string;\n  }) {\n    return this.getCurriculum(params);\n  }\n}\n\n// Export singleton instance\nexport const apiService = new ApiService();\nexport default apiService;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 927, "column": 0}, "map": {"version":3,"sources":["file:///home/gad/Desktop/Thothcraft/EducationPortal/app/labs/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { Beaker, Play, CheckCircle, Clock, Code, Download, ExternalLink } from 'lucide-react';\nimport Navigation from '../components/Navigation';\nimport apiService from '../services/api';\n\nexport default function LabsPage() {\n  const [labs, setLabs] = useState<any[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [activeTab, setActiveTab] = useState('all');\n\n  useEffect(() => {\n    loadLabs();\n  }, []);\n\n  const loadLabs = async () => {\n    try {\n      // Try to load from backend\n      const labsData = await apiService.getLabs();\n      setLabs(labsData);\n    } catch (error) {\n      console.error('Failed to load labs:', error);\n      // Demo labs data\n      setLabs([\n        {\n          id: 'lab_001',\n          title: 'Thoth Device Setup Lab',\n          description: 'Learn to configure and connect your Thoth IoT device to the network.',\n          difficulty: 'beginner',\n          estimated_time: 30,\n          status: 'completed',\n          type: 'hands-on',\n          module_id: 'mod_002',\n          resources: [\n            { type: 'notebook', name: 'Device Setup Guide', url: '/notebooks/device-setup.ipynb' },\n            { type: 'code', name: 'Configuration Script', url: '/code/setup.py' },\n            { type: 'video', name: 'Setup Walkthrough', url: '/videos/setup-guide.mp4' }\n          ],\n          objectives: [\n            'Connect Thoth device to WiFi network',\n            'Install required software packages',\n            'Test sensor functionality',\n            'Verify data transmission'\n          ],\n          completed_at: '2024-01-15T10:30:00Z',\n          score: 95\n        },\n        {\n          id: 'lab_002',\n          title: 'Sensor Data Collection',\n          description: 'Collect and analyze data from various sensors on the Thoth device.',\n          difficulty: 'beginner',\n          estimated_time: 45,\n          status: 'completed',\n          type: 'data-analysis',\n          module_id: 'mod_003',\n          resources: [\n            { type: 'notebook', name: 'Data Collection Notebook', url: '/notebooks/sensor-data.ipynb' },\n            { type: 'dataset', name: 'Sample Sensor Data', url: '/data/sensor-samples.csv' },\n            { type: 'code', name: 'Analysis Scripts', url: '/code/analyze.py' }\n          ],\n          objectives: [\n            'Read temperature and humidity data',\n            'Collect accelerometer readings',\n            'Log data to CSV files',\n            'Create basic visualizations'\n          ],\n          completed_at: '2024-01-18T14:20:00Z',\n          score: 88\n        },\n        {\n          id: 'lab_003',\n          title: 'Machine Learning Pipeline',\n          description: 'Build a complete ML pipeline for activity recognition using sensor data.',\n          difficulty: 'intermediate',\n          estimated_time: 90,\n          status: 'in_progress',\n          type: 'ml-project',\n          module_id: 'mod_004',\n          resources: [\n            { type: 'notebook', name: 'ML Pipeline Notebook', url: '/notebooks/ml-pipeline.ipynb' },\n            { type: 'dataset', name: 'Training Dataset', url: '/data/activity-data.csv' },\n            { type: 'code', name: 'Model Training', url: '/code/train_model.py' }\n          ],\n          objectives: [\n            'Preprocess sensor data',\n            'Extract relevant features',\n            'Train classification model',\n            'Evaluate model performance'\n          ],\n          started_at: '2024-01-20T09:00:00Z',\n          progress: 65\n        },\n        {\n          id: 'lab_004',\n          title: 'Federated Learning Setup',\n          description: 'Implement federated learning across multiple Thoth devices.',\n          difficulty: 'advanced',\n          estimated_time: 120,\n          status: 'available',\n          type: 'distributed-ml',\n          module_id: 'mod_005',\n          resources: [\n            { type: 'notebook', name: 'Federated Learning Guide', url: '/notebooks/federated-learning.ipynb' },\n            { type: 'code', name: 'FL Framework', url: '/code/federated.py' },\n            { type: 'documentation', name: 'Flower Tutorial', url: 'https://flower.dev/docs/' }\n          ],\n          objectives: [\n            'Set up Flower framework',\n            'Configure client devices',\n            'Implement federated averaging',\n            'Monitor training progress'\n          ]\n        },\n        {\n          id: 'lab_005',\n          title: 'Edge AI Deployment',\n          description: 'Deploy trained models to edge devices for real-time inference.',\n          difficulty: 'advanced',\n          estimated_time: 75,\n          status: 'locked',\n          type: 'deployment',\n          module_id: 'mod_005',\n          resources: [\n            { type: 'notebook', name: 'Edge Deployment Guide', url: '/notebooks/edge-deploy.ipynb' },\n            { type: 'code', name: 'Inference Engine', url: '/code/inference.py' }\n          ],\n          objectives: [\n            'Optimize model for edge deployment',\n            'Implement real-time inference',\n            'Monitor model performance',\n            'Handle model updates'\n          ]\n        },\n        {\n          id: 'lab_006',\n          title: 'Capstone Project',\n          description: 'Build a complete IoT + AI solution addressing a real-world problem.',\n          difficulty: 'expert',\n          estimated_time: 180,\n          status: 'locked',\n          type: 'capstone',\n          module_id: 'mod_006',\n          resources: [\n            { type: 'documentation', name: 'Project Guidelines', url: '/docs/capstone-guide.pdf' },\n            { type: 'template', name: 'Project Template', url: '/templates/capstone-template.zip' }\n          ],\n          objectives: [\n            'Define problem statement',\n            'Design system architecture',\n            'Implement full solution',\n            'Present final project'\n          ]\n        }\n      ]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const filteredLabs = labs.filter(lab => {\n    if (activeTab === 'all') return true;\n    if (activeTab === 'available') return lab.status === 'available' || lab.status === 'in_progress';\n    if (activeTab === 'completed') return lab.status === 'completed';\n    if (activeTab === 'in_progress') return lab.status === 'in_progress';\n    return true;\n  });\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'completed':\n        return <CheckCircle className=\"w-5 h-5 text-green-400\" />;\n      case 'in_progress':\n        return <Clock className=\"w-5 h-5 text-yellow-400\" />;\n      case 'available':\n        return <Play className=\"w-5 h-5 text-blue-400\" />;\n      default:\n        return <div className=\"w-5 h-5 bg-gray-600 rounded-full\" />;\n    }\n  };\n\n  const getDifficultyColor = (difficulty: string) => {\n    switch (difficulty) {\n      case 'beginner':\n        return 'bg-green-500/20 text-green-400';\n      case 'intermediate':\n        return 'bg-yellow-500/20 text-yellow-400';\n      case 'advanced':\n        return 'bg-orange-500/20 text-orange-400';\n      case 'expert':\n        return 'bg-red-500/20 text-red-400';\n      default:\n        return 'bg-gray-500/20 text-gray-400';\n    }\n  };\n\n  const getResourceIcon = (type: string) => {\n    switch (type) {\n      case 'notebook':\n        return <Code className=\"w-4 h-4\" />;\n      case 'code':\n        return <Code className=\"w-4 h-4\" />;\n      case 'dataset':\n        return <Download className=\"w-4 h-4\" />;\n      case 'video':\n        return <Play className=\"w-4 h-4\" />;\n      case 'documentation':\n        return <ExternalLink className=\"w-4 h-4\" />;\n      default:\n        return <ExternalLink className=\"w-4 h-4\" />;\n    }\n  };\n\n  if (loading) {\n    return (\n      <>\n        <Navigation />\n        <div className=\"min-h-screen bg-gradient-to-br from-green-900 via-blue-900 to-purple-900 flex items-center justify-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-white\"></div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Navigation />\n      <div className=\"min-h-screen bg-gradient-to-br from-green-900 via-blue-900 to-purple-900 p-6\">\n        <div className=\"max-w-7xl mx-auto\">\n          {/* Header */}\n          <div className=\"mb-8\">\n            <h1 className=\"text-4xl font-bold text-white mb-2 flex items-center gap-3\">\n              <Beaker className=\"w-10 h-10 text-purple-400\" />\n              Interactive Labs\n            </h1>\n            <p className=\"text-gray-300\">Hands-on learning experiences with real IoT devices and AI models</p>\n          </div>\n\n          {/* Tabs */}\n          <div className=\"flex flex-wrap gap-2 mb-8\">\n            {[\n              { id: 'all', label: 'All Labs', count: labs.length },\n              { id: 'available', label: 'Available', count: labs.filter(l => l.status === 'available' || l.status === 'in_progress').length },\n              { id: 'in_progress', label: 'In Progress', count: labs.filter(l => l.status === 'in_progress').length },\n              { id: 'completed', label: 'Completed', count: labs.filter(l => l.status === 'completed').length }\n            ].map(tab => (\n              <button\n                key={tab.id}\n                onClick={() => setActiveTab(tab.id)}\n                className={`px-4 py-2 rounded-lg font-medium transition-colors ${\n                  activeTab === tab.id\n                    ? 'bg-blue-500 text-white'\n                    : 'bg-white/10 text-gray-300 hover:bg-white/20'\n                }`}\n              >\n                {tab.label} ({tab.count})\n              </button>\n            ))}\n          </div>\n\n          {/* Labs Grid */}\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            {filteredLabs.map((lab) => (\n              <div key={lab.id} className=\"bg-white/10 backdrop-blur-md rounded-xl p-6 border border-white/20 hover:bg-white/15 transition-colors\">\n                {/* Lab Header */}\n                <div className=\"flex items-start justify-between mb-4\">\n                  <div className=\"flex items-center gap-3\">\n                    {getStatusIcon(lab.status)}\n                    <div>\n                      <h3 className=\"text-xl font-bold text-white\">{lab.title}</h3>\n                      <div className=\"flex items-center gap-2 mt-1\">\n                        <span className={`px-2 py-1 rounded-full text-xs ${getDifficultyColor(lab.difficulty)}`}>\n                          {lab.difficulty}\n                        </span>\n                        <span className=\"text-gray-400 text-sm\">{lab.estimated_time} min</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Description */}\n                <p className=\"text-gray-300 mb-4\">{lab.description}</p>\n\n                {/* Progress Bar (for in-progress labs) */}\n                {lab.status === 'in_progress' && lab.progress && (\n                  <div className=\"mb-4\">\n                    <div className=\"flex justify-between text-sm text-gray-400 mb-1\">\n                      <span>Progress</span>\n                      <span>{lab.progress}%</span>\n                    </div>\n                    <div className=\"bg-gray-700 rounded-full h-2\">\n                      <div \n                        className=\"bg-gradient-to-r from-yellow-400 to-orange-500 h-2 rounded-full transition-all\"\n                        style={{ width: `${lab.progress}%` }}\n                      ></div>\n                    </div>\n                  </div>\n                )}\n\n                {/* Score (for completed labs) */}\n                {lab.status === 'completed' && lab.score && (\n                  <div className=\"mb-4 flex items-center gap-2\">\n                    <CheckCircle className=\"w-5 h-5 text-green-400\" />\n                    <span className=\"text-green-400 font-medium\">Score: {lab.score}%</span>\n                    <span className=\"text-gray-400 text-sm\">\n                      Completed {new Date(lab.completed_at).toLocaleDateString()}\n                    </span>\n                  </div>\n                )}\n\n                {/* Objectives */}\n                <div className=\"mb-4\">\n                  <h4 className=\"text-white font-medium mb-2\">Learning Objectives:</h4>\n                  <ul className=\"space-y-1\">\n                    {lab.objectives.slice(0, 3).map((objective: string, index: number) => (\n                      <li key={index} className=\"text-gray-300 text-sm flex items-center gap-2\">\n                        <div className=\"w-1.5 h-1.5 bg-blue-400 rounded-full\"></div>\n                        {objective}\n                      </li>\n                    ))}\n                    {lab.objectives.length > 3 && (\n                      <li className=\"text-gray-400 text-sm\">\n                        +{lab.objectives.length - 3} more objectives\n                      </li>\n                    )}\n                  </ul>\n                </div>\n\n                {/* Resources */}\n                <div className=\"mb-6\">\n                  <h4 className=\"text-white font-medium mb-2\">Resources:</h4>\n                  <div className=\"flex flex-wrap gap-2\">\n                    {lab.resources.map((resource: any, index: number) => (\n                      <div key={index} className=\"flex items-center gap-1 bg-white/5 px-2 py-1 rounded text-xs text-gray-300\">\n                        {getResourceIcon(resource.type)}\n                        {resource.name}\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                {/* Action Button */}\n                <div className=\"flex gap-3\">\n                  {lab.status === 'available' && (\n                    <button className=\"flex-1 bg-blue-500 hover:bg-blue-600 text-white py-2 px-4 rounded-lg font-medium transition-colors flex items-center justify-center gap-2\">\n                      <Play className=\"w-4 h-4\" />\n                      Start Lab\n                    </button>\n                  )}\n                  {lab.status === 'in_progress' && (\n                    <button className=\"flex-1 bg-yellow-500 hover:bg-yellow-600 text-white py-2 px-4 rounded-lg font-medium transition-colors\">\n                      Continue Lab\n                    </button>\n                  )}\n                  {lab.status === 'completed' && (\n                    <button className=\"flex-1 bg-green-500 hover:bg-green-600 text-white py-2 px-4 rounded-lg font-medium transition-colors\">\n                      Review Lab\n                    </button>\n                  )}\n                  {lab.status === 'locked' && (\n                    <button className=\"flex-1 bg-gray-600 text-gray-400 py-2 px-4 rounded-lg font-medium cursor-not-allowed\">\n                      Locked\n                    </button>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n\n          {filteredLabs.length === 0 && (\n            <div className=\"text-center py-12\">\n              <Beaker className=\"w-16 h-16 text-gray-600 mx-auto mb-4\" />\n              <h3 className=\"text-xl font-medium text-gray-400 mb-2\">No labs found</h3>\n              <p className=\"text-gray-500\">Try switching to a different tab to see available labs.</p>\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}