{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/gad/Desktop/Thothcraft/EducationPortal/app/services/api.ts"],"sourcesContent":["/**\n * API Service for Education Portal\n * Handles all communication with Brain backend for educational features\n */\n\nimport axios from 'axios';\n\n// API Configuration\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'https://web-production-d7d37.up.railway.app';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add auth token to requests\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('auth_token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Add response interceptor for error handling\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.code === 'ERR_NETWORK') {\n      console.warn('Network error - using mock data for education portal');\n      // Return mock curriculum data for network errors\n      return Promise.resolve({\n        data: {\n          success: true,\n          message: 'Using mock data (network unavailable)',\n          modules: [\n            {\n              module_id: 'mod_001',\n              title: 'Introduction to Thoth Device',\n              description: 'Learn about the Raspberry Pi, Sense HAT, and PiSugar components',\n              type: 'lesson',\n              difficulty: 'beginner',\n              duration_minutes: 45,\n              order: 1,\n              prerequisites: [],\n              learning_objectives: ['Understand Thoth hardware', 'Identify key components', 'Setup development environment'],\n              content: {\n                video_url: 'https://example.com/videos/intro-thoth.mp4',\n                slides_url: 'https://example.com/slides/intro-thoth.pdf',\n                materials: [\n                  { type: 'pdf', title: 'Thoth Hardware Guide', url: 'https://example.com/guides/hardware.pdf' },\n                  { type: 'notebook', title: 'Setup Jupyter Notebook', url: 'https://example.com/notebooks/setup.ipynb' }\n                ]\n              }\n            },\n            {\n              module_id: 'mod_002',\n              title: 'WiFi Configuration & Network Setup',\n              description: 'Configure WiFi using captive portal and network management',\n              type: 'lab',\n              difficulty: 'beginner',\n              duration_minutes: 90,\n              order: 2,\n              prerequisites: ['mod_001'],\n              learning_objectives: ['Setup WiFi captive portal', 'Configure network settings', 'Test connectivity'],\n              content: {\n                video_url: 'https://example.com/videos/wifi-setup.mp4',\n                lab_instructions: 'https://example.com/labs/wifi-config.md',\n                materials: [\n                  { type: 'code', title: 'WiFi Configuration Script', url: 'https://example.com/code/wifi_setup.py' },\n                  { type: 'pdf', title: 'Network Troubleshooting Guide', url: 'https://example.com/guides/network.pdf' }\n                ]\n              }\n            },\n            {\n              module_id: 'mod_003',\n              title: 'Collecting Sensor Data',\n              description: 'Use Sense HAT to collect temperature, humidity, pressure, and motion data',\n              type: 'lab',\n              difficulty: 'intermediate',\n              duration_minutes: 120,\n              order: 3,\n              prerequisites: ['mod_002'],\n              learning_objectives: ['Read sensor data', 'Store data locally', 'Visualize sensor readings'],\n              content: {\n                video_url: 'https://example.com/videos/sensor-data.mp4',\n                notebook_url: 'https://example.com/notebooks/sensor_collection.ipynb',\n                materials: [\n                  { type: 'code', title: 'Sensor Reading Library', url: 'https://example.com/code/sensors.py' },\n                  { type: 'dataset', title: 'Sample Sensor Data', url: 'https://example.com/data/sample_sensors.csv' },\n                  { type: 'pdf', title: 'Sense HAT API Reference', url: 'https://example.com/docs/sensehat-api.pdf' }\n                ]\n              }\n            },\n            {\n              module_id: 'mod_004',\n              title: 'Introduction to AI/ML on Edge Devices',\n              description: 'Learn machine learning concepts and edge computing with TensorFlow Lite',\n              type: 'lesson',\n              difficulty: 'intermediate',\n              duration_minutes: 150,\n              order: 4,\n              prerequisites: ['mod_003'],\n              learning_objectives: ['Understand edge ML', 'Train simple models', 'Deploy to Raspberry Pi'],\n              content: {\n                video_url: 'https://example.com/videos/edge-ml.mp4',\n                slides_url: 'https://example.com/slides/edge-ml.pdf',\n                notebook_url: 'https://example.com/notebooks/edge_ml_intro.ipynb',\n                materials: [\n                  { type: 'code', title: 'TensorFlow Lite Examples', url: 'https://example.com/code/tflite_examples.py' },\n                  { type: 'model', title: 'Pre-trained Sensor Model', url: 'https://example.com/models/sensor_classifier.tflite' },\n                  { type: 'pdf', title: 'Edge Computing Guide', url: 'https://example.com/guides/edge-computing.pdf' }\n                ]\n              }\n            },\n            {\n              module_id: 'mod_005',\n              title: 'Federated Learning with Multiple Devices',\n              description: 'Implement federated learning using Flower framework across Thoth devices',\n              type: 'project',\n              difficulty: 'advanced',\n              duration_minutes: 180,\n              order: 5,\n              prerequisites: ['mod_004'],\n              learning_objectives: ['Setup Flower client', 'Participate in federated training', 'Understand privacy preservation'],\n              content: {\n                video_url: 'https://example.com/videos/federated-learning.mp4',\n                project_guide: 'https://example.com/projects/federated-learning.md',\n                notebook_url: 'https://example.com/notebooks/federated_learning.ipynb',\n                materials: [\n                  { type: 'code', title: 'Flower Client Implementation', url: 'https://example.com/code/flower_client.py' },\n                  { type: 'code', title: 'Federated Training Script', url: 'https://example.com/code/federated_train.py' },\n                  { type: 'pdf', title: 'Differential Privacy Guide', url: 'https://example.com/guides/differential-privacy.pdf' },\n                  { type: 'dataset', title: 'Federated Training Dataset', url: 'https://example.com/data/federated_data.zip' }\n                ]\n              }\n            },\n            {\n              module_id: 'mod_006',\n              title: 'Capstone: Smart Home Monitor',\n              description: 'Build a complete IoT solution for smart home monitoring with AI predictions',\n              type: 'project',\n              difficulty: 'expert',\n              duration_minutes: 300,\n              order: 6,\n              prerequisites: ['mod_005'],\n              learning_objectives: ['Design IoT architecture', 'Implement real-time monitoring', 'Deploy production system'],\n              content: {\n                video_url: 'https://example.com/videos/capstone-project.mp4',\n                project_template: 'https://example.com/templates/smart-home-monitor.zip',\n                requirements: 'https://example.com/projects/capstone-requirements.md',\n                materials: [\n                  { type: 'code', title: 'Smart Home Dashboard', url: 'https://example.com/code/dashboard.py' },\n                  { type: 'code', title: 'Alert System', url: 'https://example.com/code/alerts.py' },\n                  { type: 'model', title: 'Anomaly Detection Model', url: 'https://example.com/models/anomaly_detector.pkl' },\n                  { type: 'pdf', title: 'Deployment Guide', url: 'https://example.com/guides/deployment.pdf' },\n                  { type: 'video', title: 'Demo Walkthrough', url: 'https://example.com/videos/capstone-demo.mp4' }\n                ]\n              }\n            }\n          ],\n          courses: [\n            {\n              course_id: 'course_001',\n              title: 'AI & IoT with Thoth',\n              description: 'Complete course on IoT and AI',\n              instructor: 'Thoth Team',\n              difficulty: 'intermediate',\n              duration_hours: 15,\n              modules: ['mod_001', 'mod_002'],\n              enrolled_students: 0,\n              rating: 4.8\n            }\n          ]\n        }\n      });\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Types\nexport interface CurriculumModule {\n  module_id: string;\n  title: string;\n  description: string;\n  type: 'lesson' | 'lab' | 'project' | 'quiz' | 'assignment';\n  difficulty: 'beginner' | 'intermediate' | 'advanced' | 'expert';\n  duration_minutes: number;\n  prerequisites: string[];\n  learning_objectives: string[];\n  order: number;\n  content?: {\n    video_url?: string;\n    slides_url?: string;\n    notebook_url?: string;\n    lab_instructions?: string;\n    project_guide?: string;\n    project_template?: string;\n    requirements?: string;\n    materials?: Array<{\n      type: 'pdf' | 'code' | 'notebook' | 'dataset' | 'model' | 'video';\n      title: string;\n      url: string;\n    }>;\n  };\n}\n\nexport interface ContentItem {\n  item_id?: string;\n  title: string;\n  type: 'video' | 'pdf' | 'notebook' | 'slides' | 'code' | 'interactive';\n  url?: string;\n  file_path?: string;\n  duration_minutes?: number;\n  interactive_config?: any;\n}\n\nexport interface StudentProgress {\n  student_id: string;\n  module_id: string;\n  status: 'not_started' | 'in_progress' | 'completed' | 'reviewed';\n  started_at?: string;\n  completed_at?: string;\n  time_spent_minutes: number;\n  score?: number;\n  attempts: number;\n  notes?: string;\n  bookmarks: string[];\n}\n\nexport interface Course {\n  course_id: string;\n  title: string;\n  description: string;\n  instructor: string;\n  difficulty: 'beginner' | 'intermediate' | 'advanced' | 'expert';\n  duration_hours: number;\n  modules: string[];\n  enrolled_students: number;\n  rating: number;\n  tags: string[];\n  created_at: string;\n  updated_at: string;\n}\n\nexport interface LabSubmission {\n  submission_id: string;\n  student_id: string;\n  lab_id: string;\n  code?: string;\n  notebook_path?: string;\n  output?: string;\n  device_data?: any;\n  submitted_at: string;\n  grade?: number;\n  feedback?: string;\n}\n\n// API Service\nclass ApiService {\n  // Authentication\n  async login(email: string, password: string) {\n    const response = await api.post('/token', { email, password });\n    if (response.data.access_token) {\n      localStorage.setItem('auth_token', response.data.access_token);\n    }\n    return response.data;\n  }\n\n  async register(email: string, password: string, role: string = 'student') {\n    const response = await api.post('/register', { email, password, role });\n    return response.data;\n  }\n\n  async getProfile() {\n    const response = await api.get('/profile');\n    return response.data;\n  }\n\n  // Curriculum\n  async getCurriculum(params?: {\n    course_id?: string;\n    module_type?: string;\n    difficulty?: string;\n    tags?: string;\n  }) {\n    const response = await api.get('/curriculum', { params });\n    return response.data;\n  }\n\n  async getModuleDetails(moduleId: string): Promise<CurriculumModule> {\n    const response = await api.get(`/curriculum/${moduleId}`);\n    return response.data;\n  }\n\n  async updateProgress(progress: Partial<StudentProgress>) {\n    const response = await api.post('/curriculum/progress', progress);\n    return response.data;\n  }\n\n  async getStudentProgress(studentId: string, courseId?: string) {\n    const url = courseId \n      ? `/curriculum/progress/${studentId}?course_id=${courseId}`\n      : `/curriculum/progress/${studentId}`;\n    const response = await api.get(url);\n    return response.data;\n  }\n\n  async submitLab(submission: Partial<LabSubmission>) {\n    const response = await api.post('/curriculum/lab/submit', submission);\n    return response.data;\n  }\n\n  async getLeaderboard(courseId?: string, limit: number = 10) {\n    const params: any = { limit };\n    if (courseId) params.course_id = courseId;\n    const response = await api.get('/curriculum/leaderboard', { params });\n    return response.data;\n  }\n\n  // Device Configuration for Labs\n  async configureDevice(deviceId: string, config: any) {\n    const response = await api.post(`/device/${deviceId}/config`, config);\n    return response.data;\n  }\n\n  async getDeviceStatus(deviceId: string) {\n    const response = await api.get(`/device/${deviceId}/status`);\n    return response.data;\n  }\n\n  // Sensor Data for Labs\n  async getSensorData(deviceId: string) {\n    const response = await api.get(`/sensors/current?device_id=${deviceId}`);\n    return response.data;\n  }\n\n  async controlSensors(deviceId: string, config: any) {\n    const response = await api.post('/sensors/control', {\n      device_id: deviceId,\n      ...config\n    });\n    return response.data;\n  }\n\n  // Training for Advanced Labs\n  async setupTraining(config: any) {\n    const response = await api.post('/training/setup', config);\n    return response.data;\n  }\n\n  async getTrainingStatus(jobId: string) {\n    const response = await api.get(`/training/status?job_id=${jobId}`);\n    return response.data;\n  }\n\n  // Files and Resources\n  async downloadResource(filePath: string) {\n    const response = await api.get(`/file/download`, {\n      params: { path: filePath },\n      responseType: 'blob'\n    });\n    return response.data;\n  }\n\n  async uploadLabWork(formData: FormData) {\n    const response = await api.post('/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    return response.data;\n  }\n\n  // Community Features\n  async getForumPosts(moduleId?: string) {\n    // This would connect to Firebase or another backend\n    // Mock implementation for now\n    return {\n      posts: [\n        {\n          id: '1',\n          author: 'Student A',\n          title: 'Help with sensor calibration',\n          content: 'Having issues with temperature sensor readings...',\n          created_at: new Date().toISOString(),\n          replies: 3\n        }\n      ]\n    };\n  }\n\n  async createForumPost(post: {\n    title: string;\n    content: string;\n    module_id?: string;\n  }) {\n    // Mock implementation\n    return {\n      success: true,\n      post_id: 'new-post-id'\n    };\n  }\n\n  // Project Showcase\n  async getProjects(filter?: 'featured' | 'recent' | 'popular') {\n    // Mock implementation\n    return {\n      projects: [\n        {\n          id: '1',\n          title: 'Smart Plant Monitor',\n          author: 'Student B',\n          description: 'IoT system for monitoring plant health',\n          image_url: '/project1.jpg',\n          likes: 42,\n          views: 156\n        }\n      ]\n    };\n  }\n\n  async submitProject(project: {\n    title: string;\n    description: string;\n    module_id: string;\n    video_url?: string;\n    github_url?: string;\n  }) {\n    // Mock implementation\n    return {\n      success: true,\n      project_id: 'new-project-id'\n    };\n  }\n\n  // Labs Management\n  async getLabs() {\n    try {\n      const response = await api.get('/curriculum/labs');\n      return response.data.labs || [];\n    } catch (error) {\n      console.warn('Failed to load labs from backend, using mock data');\n      // Return mock labs data\n      return [];\n    }\n  }\n\n  // Course Management\n  async getCourse(courseId: string) {\n    try {\n      const response = await api.get(`/curriculum/courses/${courseId}`);\n      return response.data;\n    } catch (error) {\n      console.warn('Failed to load course from backend, using mock data');\n      // Return mock course data\n      return null;\n    }\n  }\n\n  // Alias for getCurriculum to match expected method name\n  async getCurriculumModules(params?: {\n    course_id?: string;\n    module_type?: string;\n    difficulty?: string;\n  }) {\n    return this.getCurriculum(params);\n  }\n}\n\n// Export singleton instance\nexport const apiService = new ApiService();\nexport default apiService;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 493, "column": 0}, "map": {"version":3,"sources":["file:///home/gad/Desktop/Thothcraft/EducationPortal/app/module/%5Bid%5D/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'next/navigation';\nimport { motion } from 'framer-motion';\nimport { \n  Play, \n  FileText, \n  Code, \n  Download, \n  Clock, \n  Target, \n  CheckCircle, \n  BookOpen,\n  Video,\n  Database,\n  Brain,\n  ArrowLeft\n} from 'lucide-react';\nimport Link from 'next/link';\nimport apiService, { CurriculumModule } from '../../services/api';\n\nexport default function ModulePage() {\n  const params = useParams();\n  const moduleId = params.id as string;\n  const [module, setModule] = useState<CurriculumModule | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [progress, setProgress] = useState(0);\n\n  useEffect(() => {\n    fetchModuleDetails();\n  }, [moduleId]);\n\n  const fetchModuleDetails = async () => {\n    try {\n      const response = await apiService.getCurriculum();\n      const modules = response.modules || [];\n      const moduleData = modules.find((m: CurriculumModule) => m.module_id === moduleId);\n      \n      if (moduleData) {\n        setModule(moduleData);\n        // Simulate progress from localStorage\n        const savedProgress = localStorage.getItem(`module_progress_${moduleId}`);\n        setProgress(savedProgress ? parseInt(savedProgress) : 0);\n      }\n    } catch (error) {\n      console.error('Error fetching module:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const updateProgress = (newProgress: number) => {\n    setProgress(newProgress);\n    localStorage.setItem(`module_progress_${moduleId}`, newProgress.toString());\n  };\n\n  const getIconForMaterialType = (type: string) => {\n    switch (type) {\n      case 'video': return <Video className=\"w-5 h-5\" />;\n      case 'pdf': return <FileText className=\"w-5 h-5\" />;\n      case 'code': return <Code className=\"w-5 h-5\" />;\n      case 'notebook': return <BookOpen className=\"w-5 h-5\" />;\n      case 'dataset': return <Database className=\"w-5 h-5\" />;\n      case 'model': return <Brain className=\"w-5 h-5\" />;\n      default: return <FileText className=\"w-5 h-5\" />;\n    }\n  };\n\n  const getDifficultyColor = (difficulty: string) => {\n    switch (difficulty) {\n      case 'beginner': return 'text-green-400 bg-green-500/20';\n      case 'intermediate': return 'text-yellow-400 bg-yellow-500/20';\n      case 'advanced': return 'text-orange-400 bg-orange-500/20';\n      case 'expert': return 'text-red-400 bg-red-500/20';\n      default: return 'text-gray-400 bg-gray-500/20';\n    }\n  };\n\n  const getTypeColor = (type: string) => {\n    switch (type) {\n      case 'lesson': return 'text-blue-400 bg-blue-500/20';\n      case 'lab': return 'text-purple-400 bg-purple-500/20';\n      case 'project': return 'text-green-400 bg-green-500/20';\n      case 'quiz': return 'text-yellow-400 bg-yellow-500/20';\n      default: return 'text-gray-400 bg-gray-500/20';\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-green-900 via-blue-900 to-purple-900 flex items-center justify-center\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-white\"></div>\n      </div>\n    );\n  }\n\n  if (!module) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-green-900 via-blue-900 to-purple-900 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <h1 className=\"text-2xl font-bold text-white mb-4\">Module Not Found</h1>\n          <Link href=\"/courses\" className=\"text-blue-400 hover:text-blue-300\">\n            ← Back to Courses\n          </Link>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-green-900 via-blue-900 to-purple-900\">\n      <div className=\"max-w-6xl mx-auto px-6 py-8\">\n        {/* Header */}\n        <motion.div\n          initial={{ opacity: 0, y: -20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"mb-8\"\n        >\n          <Link \n            href=\"/courses\" \n            className=\"inline-flex items-center text-blue-400 hover:text-blue-300 mb-4 transition-colors\"\n          >\n            <ArrowLeft className=\"w-4 h-4 mr-2\" />\n            Back to Courses\n          </Link>\n          \n          <div className=\"flex items-start justify-between\">\n            <div className=\"flex-1\">\n              <div className=\"flex items-center gap-3 mb-4\">\n                <span className={`px-3 py-1 rounded-full text-sm font-medium ${getTypeColor(module.type)}`}>\n                  {module.type.charAt(0).toUpperCase() + module.type.slice(1)}\n                </span>\n                <span className={`px-3 py-1 rounded-full text-sm font-medium ${getDifficultyColor(module.difficulty)}`}>\n                  {module.difficulty.charAt(0).toUpperCase() + module.difficulty.slice(1)}\n                </span>\n              </div>\n              \n              <h1 className=\"text-4xl font-bold text-white mb-4\">{module.title}</h1>\n              <p className=\"text-xl text-gray-300 mb-6\">{module.description}</p>\n              \n              <div className=\"flex items-center gap-6 text-gray-400\">\n                <div className=\"flex items-center gap-2\">\n                  <Clock className=\"w-5 h-5\" />\n                  <span>{module.duration_minutes} minutes</span>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <Target className=\"w-5 h-5\" />\n                  <span>{module.learning_objectives.length} objectives</span>\n                </div>\n              </div>\n            </div>\n            \n            {/* Progress Circle */}\n            <div className=\"relative w-24 h-24\">\n              <svg className=\"w-24 h-24 transform -rotate-90\" viewBox=\"0 0 100 100\">\n                <circle\n                  cx=\"50\"\n                  cy=\"50\"\n                  r=\"40\"\n                  stroke=\"rgba(255,255,255,0.1)\"\n                  strokeWidth=\"8\"\n                  fill=\"none\"\n                />\n                <circle\n                  cx=\"50\"\n                  cy=\"50\"\n                  r=\"40\"\n                  stroke=\"#10B981\"\n                  strokeWidth=\"8\"\n                  fill=\"none\"\n                  strokeDasharray={`${2 * Math.PI * 40}`}\n                  strokeDashoffset={`${2 * Math.PI * 40 * (1 - progress / 100)}`}\n                  className=\"transition-all duration-500\"\n                />\n              </svg>\n              <div className=\"absolute inset-0 flex items-center justify-center\">\n                <span className=\"text-white font-bold\">{progress}%</span>\n              </div>\n            </div>\n          </div>\n        </motion.div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n          {/* Main Content */}\n          <div className=\"lg:col-span-2 space-y-8\">\n            {/* Learning Objectives */}\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.1 }}\n              className=\"bg-white/10 backdrop-blur-md rounded-xl p-6 border border-white/20\"\n            >\n              <h2 className=\"text-2xl font-bold text-white mb-4 flex items-center gap-2\">\n                <Target className=\"w-6 h-6 text-green-400\" />\n                Learning Objectives\n              </h2>\n              <ul className=\"space-y-3\">\n                {module.learning_objectives.map((objective, index) => (\n                  <li key={index} className=\"flex items-start gap-3 text-gray-300\">\n                    <CheckCircle className=\"w-5 h-5 text-green-400 mt-0.5 flex-shrink-0\" />\n                    <span>{objective}</span>\n                  </li>\n                ))}\n              </ul>\n            </motion.div>\n\n            {/* Main Video/Content */}\n            {module.content?.video_url && (\n              <motion.div\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ delay: 0.2 }}\n                className=\"bg-white/10 backdrop-blur-md rounded-xl p-6 border border-white/20\"\n              >\n                <h2 className=\"text-2xl font-bold text-white mb-4 flex items-center gap-2\">\n                  <Play className=\"w-6 h-6 text-blue-400\" />\n                  Main Content\n                </h2>\n                <div className=\"aspect-video bg-black/50 rounded-lg flex items-center justify-center mb-4\">\n                  <div className=\"text-center\">\n                    <Play className=\"w-16 h-16 text-white/50 mx-auto mb-4\" />\n                    <p className=\"text-white/70\">Video Player</p>\n                    <p className=\"text-sm text-white/50\">Click to play: {module.title}</p>\n                  </div>\n                </div>\n                <button\n                  onClick={() => updateProgress(Math.min(progress + 25, 100))}\n                  className=\"w-full bg-blue-500 hover:bg-blue-600 text-white py-3 px-6 rounded-lg font-medium transition-colors flex items-center justify-center gap-2\"\n                >\n                  <Play className=\"w-5 h-5\" />\n                  Watch Video\n                </button>\n              </motion.div>\n            )}\n\n            {/* Interactive Lab */}\n            {module.type === 'lab' && (\n              <motion.div\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ delay: 0.3 }}\n                className=\"bg-white/10 backdrop-blur-md rounded-xl p-6 border border-white/20\"\n              >\n                <h2 className=\"text-2xl font-bold text-white mb-4 flex items-center gap-2\">\n                  <Code className=\"w-6 h-6 text-purple-400\" />\n                  Interactive Lab\n                </h2>\n                <div className=\"bg-black/50 rounded-lg p-4 mb-4\">\n                  <pre className=\"text-green-400 text-sm overflow-x-auto\">\n{`# Thoth Device Setup Lab\nimport sense_hat\nimport time\n\n# Initialize Sense HAT\nsense = sense_hat.SenseHat()\n\n# Read sensor data\ntemperature = sense.get_temperature()\nhumidity = sense.get_humidity()\npressure = sense.get_pressure()\n\nprint(f\"Temperature: {temperature:.1f}°C\")\nprint(f\"Humidity: {humidity:.1f}%\")\nprint(f\"Pressure: {pressure:.1f}mb\")\n\n# Display on LED matrix\nsense.show_message(\"Hello Thoth!\", text_colour=[0, 255, 0])`}\n                  </pre>\n                </div>\n                <div className=\"flex gap-3\">\n                  <button\n                    onClick={() => updateProgress(Math.min(progress + 30, 100))}\n                    className=\"flex-1 bg-purple-500 hover:bg-purple-600 text-white py-3 px-6 rounded-lg font-medium transition-colors\"\n                  >\n                    Run Code\n                  </button>\n                  <button className=\"flex-1 bg-gray-600 hover:bg-gray-700 text-white py-3 px-6 rounded-lg font-medium transition-colors\">\n                    Submit Lab\n                  </button>\n                </div>\n              </motion.div>\n            )}\n          </div>\n\n          {/* Sidebar */}\n          <div className=\"space-y-6\">\n            {/* Materials */}\n            <motion.div\n              initial={{ opacity: 0, x: 20 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ delay: 0.2 }}\n              className=\"bg-white/10 backdrop-blur-md rounded-xl p-6 border border-white/20\"\n            >\n              <h3 className=\"text-xl font-bold text-white mb-4\">Course Materials</h3>\n              <div className=\"space-y-3\">\n                {module.content?.materials?.map((material, index) => (\n                  <div\n                    key={index}\n                    className=\"flex items-center gap-3 p-3 bg-white/5 rounded-lg hover:bg-white/10 transition-colors cursor-pointer\"\n                  >\n                    <div className=\"text-blue-400\">\n                      {getIconForMaterialType(material.type)}\n                    </div>\n                    <div className=\"flex-1\">\n                      <p className=\"text-white font-medium\">{material.title}</p>\n                      <p className=\"text-sm text-gray-400 capitalize\">{material.type}</p>\n                    </div>\n                    <Download className=\"w-4 h-4 text-gray-400\" />\n                  </div>\n                ))}\n                \n                {/* Additional Materials */}\n                <div className=\"flex items-center gap-3 p-3 bg-white/5 rounded-lg hover:bg-white/10 transition-colors cursor-pointer\">\n                  <Video className=\"w-5 h-5 text-blue-400\" />\n                  <div className=\"flex-1\">\n                    <p className=\"text-white font-medium\">Video Lecture</p>\n                    <p className=\"text-sm text-gray-400\">45 minutes</p>\n                  </div>\n                  <Download className=\"w-4 h-4 text-gray-400\" />\n                </div>\n                \n                <div className=\"flex items-center gap-3 p-3 bg-white/5 rounded-lg hover:bg-white/10 transition-colors cursor-pointer\">\n                  <FileText className=\"w-5 h-5 text-green-400\" />\n                  <div className=\"flex-1\">\n                    <p className=\"text-white font-medium\">Lab Instructions</p>\n                    <p className=\"text-sm text-gray-400\">PDF Guide</p>\n                  </div>\n                  <Download className=\"w-4 h-4 text-gray-400\" />\n                </div>\n              </div>\n            </motion.div>\n\n            {/* Prerequisites */}\n            {module.prerequisites.length > 0 && (\n              <motion.div\n                initial={{ opacity: 0, x: 20 }}\n                animate={{ opacity: 1, x: 0 }}\n                transition={{ delay: 0.3 }}\n                className=\"bg-white/10 backdrop-blur-md rounded-xl p-6 border border-white/20\"\n              >\n                <h3 className=\"text-xl font-bold text-white mb-4\">Prerequisites</h3>\n                <div className=\"space-y-2\">\n                  {module.prerequisites.map((prereq, index) => (\n                    <div key={index} className=\"flex items-center gap-2 text-gray-300\">\n                      <CheckCircle className=\"w-4 h-4 text-green-400\" />\n                      <span>{prereq}</span>\n                    </div>\n                  ))}\n                </div>\n              </motion.div>\n            )}\n\n            {/* Progress Actions */}\n            <motion.div\n              initial={{ opacity: 0, x: 20 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ delay: 0.4 }}\n              className=\"bg-white/10 backdrop-blur-md rounded-xl p-6 border border-white/20\"\n            >\n              <h3 className=\"text-xl font-bold text-white mb-4\">Your Progress</h3>\n              <div className=\"space-y-3\">\n                <button\n                  onClick={() => updateProgress(25)}\n                  className=\"w-full bg-blue-500/20 hover:bg-blue-500/30 text-blue-400 py-2 px-4 rounded-lg transition-colors\"\n                >\n                  Mark as Started\n                </button>\n                <button\n                  onClick={() => updateProgress(100)}\n                  className=\"w-full bg-green-500/20 hover:bg-green-500/30 text-green-400 py-2 px-4 rounded-lg transition-colors\"\n                >\n                  Mark as Complete\n                </button>\n                <button\n                  onClick={() => updateProgress(0)}\n                  className=\"w-full bg-gray-500/20 hover:bg-gray-500/30 text-gray-400 py-2 px-4 rounded-lg transition-colors\"\n                >\n                  Reset Progress\n                </button>\n              </div>\n            </motion.div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}